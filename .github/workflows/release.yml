name: Release
on:
  push:
    tags:
      - "v*"

jobs:
  build-publish:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip wheel    env:
      IMAGE_REPO: ${{ toLower(github.repository) }}
      IMAGE_NAME: ghcr.io/${{ env.IMAGE_REPO }}:${{ github.ref_name }}

          pip install -r requirements.txt

      - name: Train per tag
        run: |
          if [[ "${GITHUB_REF_NAME}" == "v0.1" ]]; then
            export MODEL_VERSION=v0.1
            python training/train_v01.py
          else
            export MODEL_VERSION=${GITHUB_REF_NAME}
            python training/train_v02.py
          fi

      - name: Capture metrics
        id: metrics
        run: |
          echo "METRICS<<EOF" >> $GITHUB_OUTPUT
          cat artifacts/metrics.json >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image (model baked in)
        run: docker build -t $IMAGE_NAME .

      - name: Smoke test container
        run: |
          docker run -d -p 8000:8000 --name svc $IMAGE_NAME
          sleep 3
          curl -sSf http://localhost:8000/health
          curl -sSf -X POST http://localhost:8000/predict \
            -H "Content-Type: application/json" \
            -d '{"age":0.02,"sex":-0.044,"bmi":0.06,"bp":-0.03,"s1":-0.02,"s2":0.03,"s3":-0.02,"s4":0.02,"s5":0.02,"s6":-0.001}'
          docker rm -f svc

      - name: Push image
        run: docker push $IMAGE_NAME

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            Metrics:
            ```
            ${{ steps.metrics.outputs.METRICS }}
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
